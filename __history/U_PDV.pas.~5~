unit U_PDV;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, Vcl.ComCtrls, Data.DB, Vcl.StdCtrls,
  Vcl.Grids, Vcl.DBGrids, Vcl.ExtCtrls;

type
  TF_PDV = class(TForm)
    StatusBar1: TStatusBar;
    pnl_pdv_baixo: TPanel;
    dbg_lancamento: TDBGrid;
    edt_pro_descr: TEdit;
    edt_pro_preco: TEdit;
    edt_pro_qtd: TEdit;
    btn_pro_add: TButton;
    edt_total: TEdit;
    Label1: TLabel;
    btn_gravar_venda: TButton;
    btn_cancelar_venda: TButton;
    btn_remove_item: TButton;
    edt_cli_codigo: TEdit;
    edt_cli_nome: TEdit;
    edt_pro_cod: TEdit;
    btn_iniciar_venda: TButton;
    desc: TLabel;
    procedure edt_cli_codigoKeyPress(Sender: TObject; var Key: Char);
  private
    { Private declarations }
  public
    { Public declarations }
  end;

var
  F_PDV: TF_PDV;

implementation

{$R *.dfm}

uses DM, U_Funcoes;

procedure TF_PDV.edt_cli_codigoKeyPress(Sender: TObject; var Key: Char);
begin
  if key = #13 then
  begin
    with DataMod.QRY_Cli do
     begin
       close;
       SQL.clear;
       SQL.add('select * from clientes ');
       SQL.add(' where Codigo = :codigo ');
       ParamByName('codigo').value :=  edt_cli_codigo.text;
       open;

       if recordcount = 0 then
       begin
         showMessage('Cliente não encontrado');
       end
       else if recordcount = 1 then
       begin
         edt_cli_nome.text := dataMod.QRY_cliNome.AsString;
       end;




     end;
  end;

end;

end.
